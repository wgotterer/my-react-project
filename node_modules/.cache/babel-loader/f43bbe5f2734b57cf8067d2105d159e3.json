{"ast":null,"code":"var _jsxFileName = \"/Users/williamgotterer/Development/code/Mod2/my-react-project/src/components/Add.js\",\n    _s = $RefreshSig$();\n\n// src/components/About.js\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Add() {\n  _s();\n\n  // const [addRecipe, setAddRecipe] = useState([])\n  const [allRecipes, setAllRecipes] = useState([]);\n  const [formState, setFormSate] = useState({\n    \"strMeal\": \"\",\n    \"strIngredients\": \"\",\n    \"strInstructions\": \"\",\n    \"strMealThumb\": \"\"\n  });\n\n  function handleChange(e) {\n    const name = e.target.name;\n    let value = e.target.value;\n    setFormSate({ ...formState,\n      [name]: value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); //console.log(e.target.image.value)\n\n    let newMeal = {\n      \"strMeal\": e.target.strMeal.value,\n      \"strIngredients\": e.target.strIngredients.value,\n      \"strInstructions\": e.target.strInstructions.value,\n      \"strMealThumb\": e.target.strMealThumb.value\n    };\n    fetch(\"process.env.http://localhost:8000/recipes\", {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newMeal)\n    }).then(response => response.json()).then(data => setAllRecipes([data, ...allRecipes]));\n    setFormSate({\n      \"strMeal\": \"\",\n      \"strIngredients\": \"\",\n      \"strInstructions\": \"\",\n      \"strMealThumb\": \"\"\n    });\n  }\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/recipes`).then(response => response.json()).then(data => setAllRecipes(data));\n  }, []);\n\n  function deleteRecipe(recipe) {\n    fetch(`/recipes/${recipe.id}`, {\n      method: \"DELETE\"\n    }).then(() => setAllRecipes(allRecipes.filter(meal => meal.id !== recipe.id)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strMeal,\n        type: \"text\",\n        name: \"strMeal\",\n        placeholder: \"Recipe name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strMealThumb,\n        type: \"text\",\n        name: \"strMealThumb\",\n        placeholder: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strIngredients,\n        type: \"text\",\n        name: \"strIngredients\",\n        placeholder: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strInstructions,\n        type: \"text\",\n        name: \"strInstructions\",\n        placeholder: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), allRecipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n      recipe: recipe,\n      deleteRecipe: deleteRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 30\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Add, \"qFw1K3fwg5bXwfRFL2M5h4enCX4=\");\n\n_c = Add;\nexport default Add;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"sources":["/Users/williamgotterer/Development/code/Mod2/my-react-project/src/components/Add.js"],"names":["React","useState","useEffect","RecipeCard","Add","allRecipes","setAllRecipes","formState","setFormSate","handleChange","e","name","target","value","handleSubmit","preventDefault","newMeal","strMeal","strIngredients","strInstructions","strMealThumb","fetch","method","headers","body","JSON","stringify","then","response","json","data","process","env","REACT_APP_API_URL","deleteRecipe","recipe","id","filter","meal","map"],"mappings":"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","sourcesContent":["// src/components/About.js\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport RecipeCard from \"./RecipeCard\"\n\nfunction Add() {\n\n// const [addRecipe, setAddRecipe] = useState([])\nconst [allRecipes, setAllRecipes] = useState([])\nconst [formState, setFormSate] = useState({\n     \"strMeal\": \"\",\n     \"strIngredients\": \"\",\n     \"strInstructions\": \"\",\n     \"strMealThumb\": \"\"\n})\n\nfunction handleChange(e){\n  const name = e.target.name\n  let value = e.target.value\n\n  setFormSate({\n    ...formState,\n    [name]:value\n  })\n}\n\n\n\nfunction handleSubmit(e){\n  e.preventDefault()\n  //console.log(e.target.image.value)\nlet newMeal = {\n     \"strMeal\": e.target.strMeal.value,\n     \"strIngredients\": e.target.strIngredients.value,\n     \"strInstructions\": e.target.strInstructions.value,\n     \"strMealThumb\": e.target.strMealThumb.value,\n      }\n      fetch(\"process.env.http://localhost:8000/recipes\", {\n        method:'POST',\n        headers:  {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newMeal)\n      })\n      .then(response => response.json())\n      .then(data => setAllRecipes([data, ...allRecipes]))\n      setFormSate({\n        \"strMeal\": \"\",\n        \"strIngredients\": \"\",\n        \"strInstructions\": \"\",\n        \"strMealThumb\": \"\"\n   })\n      \n    }\n\n\n     \n     useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_URL}/recipes`)\n        .then(response => response.json())\n        .then(data => setAllRecipes(data))\n     }, [])\n\n    \n     \n     function deleteRecipe(recipe){\n      fetch(`/recipes/${recipe.id}`, {\n        method: \"DELETE\"\n      })\n      .then(()=> setAllRecipes(allRecipes.filter((meal)=> meal.id !== recipe.id)))\n  }\n      \n\n return (\n  <div className=\"new-recipe-form\">\n    <h2>New Recipe</h2>\n    <form  onSubmit={handleSubmit}>\n      <input onChange={handleChange} value={formState.strMeal} type=\"text\" name=\"strMeal\" placeholder=\"Recipe name\" />\n      <input onChange={handleChange} value={formState.strMealThumb} type=\"text\" name=\"strMealThumb\" placeholder=\"Image URL\" />\n      <input onChange={handleChange} value={formState.strIngredients} type=\"text\" name=\"strIngredients\" placeholder=\"Ingredients\"/>\n      <input onChange={handleChange} value={formState.strInstructions} type=\"text\" name=\"strInstructions\"  placeholder=\"Instructions\" />\n      <button  type=\"submit\"> Add Recipe</button>\n    </form>\n  {allRecipes.map((recipe)=> <RecipeCard recipe={recipe} deleteRecipe={deleteRecipe}/>)}\n  </div>\n)\n}\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}