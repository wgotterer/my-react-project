{"ast":null,"code":"var _jsxFileName = \"/Users/williamgotterer/Development/code/Mod2/my-react-project/src/components/Add.js\",\n    _s = $RefreshSig$();\n\n// src/components/About.js\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Add() {\n  _s();\n\n  // const [addRecipe, setAddRecipe] = useState([])\n  const [allRecipes, setAllRecipes] = useState([]);\n  const [formState, setFormSate] = useState({\n    \"strMeal\": \"\",\n    \"strIngredients\": \"\",\n    \"strInstructions\": \"\",\n    \"strMealThumb\": \"\"\n  });\n\n  function handleChange(e) {\n    const name = e.target.name;\n    let value = e.target.value;\n  }\n\n  setFormSate({});\n\n  function handleSubmit(e) {\n    e.preventDefault(); //console.log(e.target.image.value)\n\n    let newMeal = {\n      \"strMeal\": e.target.name.value,\n      \"strIngredients\": e.target.ingredients.value,\n      \"strInstructions\": e.target.instructions.value,\n      \"strMealThumb\": e.target.image.value\n    };\n    fetch(\"http://localhost:8000/recipes\", {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newMeal)\n    }).then(response => response.json()).then(data => allRecipes([data, ...allRecipes]));\n  } //  function handleSubmit(e){\n  //    e.preventDefault()\n  //    //console.log(e.target.image.value)\n  //  let newMeal = {\n  //       \"strMeal\": e.target.name.value,\n  //       \"strIngredients\": e.target.ingredients.value,\n  //       \"strInstructions\": e.target.instructions.value,\n  //       \"strMealThumb\": e.target.image.value,\n  //        }\n  //        fetch(\"http://localhost:8000/recipes\", {\n  //          method:'POST',\n  //          headers:  {\n  //            \"Content-type\": \"application/json\"\n  //          },\n  //          body: JSON.stringify(newMeal)\n  //        })\n  //        .then(response => response.json())\n  //        .then(data => setAllRecipes([data, ...allRecipes]))\n  //        setAllRecipes({\n  //         \"strMeal\": \"\",\n  //         \"strIngredients\": \"\",\n  //         \"strInstructions\": \"\",\n  //         \"strMealThumb\": \"\",\n  //          })\n  //      }\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/recipes\").then(response => response.json()).then(data => setAllRecipes(data));\n  }, []);\n\n  function deleteRecipe(recipe) {\n    fetch(`http://localhost:8000/recipes/${recipe.id}`, {\n      method: \"DELETE\"\n    }).then(() => setAllRecipes(allRecipes.filter(meal => meal.id !== recipe.id)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strMeal,\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Recipe name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strMealThumb,\n        type: \"text\",\n        name: \"image\",\n        placeholder: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strIngredients,\n        type: \"text\",\n        name: \"ingredients\",\n        placeholder: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: formState.strInstructions,\n        type: \"text\",\n        name: \"instructions\",\n        placeholder: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), allRecipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeCard, {\n      recipe: recipe,\n      deleteRecipe: deleteRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 30\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Add, \"qFw1K3fwg5bXwfRFL2M5h4enCX4=\");\n\n_c = Add;\nexport default Add;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"sources":["/Users/williamgotterer/Development/code/Mod2/my-react-project/src/components/Add.js"],"names":["React","useState","useEffect","RecipeCard","Add","allRecipes","setAllRecipes","formState","setFormSate","handleChange","e","name","target","value","handleSubmit","preventDefault","newMeal","ingredients","instructions","image","fetch","method","headers","body","JSON","stringify","then","response","json","data","deleteRecipe","recipe","id","filter","meal","strMeal","strMealThumb","strIngredients","strInstructions","map"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEf;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,SAAD,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC;AACrC,eAAW,EAD0B;AAErC,sBAAkB,EAFmB;AAGrC,uBAAmB,EAHkB;AAIrC,oBAAgB;AAJqB,GAAD,CAAzC;;AAOA,WAASQ,YAAT,CAAsBC,CAAtB,EAAwB;AACtB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,QAAIE,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAArB;AACD;;AAEDL,EAAAA,WAAW,CAAC,EAAD,CAAX;;AAIA,WAASM,YAAT,CAAsBJ,CAAtB,EAAwB;AACtBA,IAAAA,CAAC,CAACK,cAAF,GADsB,CAEtB;;AACF,QAAIC,OAAO,GAAG;AACT,iBAAWN,CAAC,CAACE,MAAF,CAASD,IAAT,CAAcE,KADhB;AAET,wBAAkBH,CAAC,CAACE,MAAF,CAASK,WAAT,CAAqBJ,KAF9B;AAGT,yBAAmBH,CAAC,CAACE,MAAF,CAASM,YAAT,CAAsBL,KAHhC;AAIT,sBAAgBH,CAAC,CAACE,MAAF,CAASO,KAAT,CAAeN;AAJtB,KAAd;AAMMO,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAC,MAD8B;AAErCC,MAAAA,OAAO,EAAG;AACR,wBAAgB;AADR,OAF2B;AAKrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AAL+B,KAAlC,CAAL,CAOCU,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,IAAI,IAAIxB,UAAU,CAAC,CAACwB,IAAD,EAAO,GAAGxB,UAAV,CAAD,CARxB;AAUD,GAvCU,CA0Cf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEKH,EAAAA,SAAS,CAAC,MAAM;AACbkB,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCM,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIvB,aAAa,CAACuB,IAAD,CAF3B;AAGF,GAJQ,EAIN,EAJM,CAAT;;AAQA,WAASC,YAAT,CAAsBC,MAAtB,EAA6B;AAC5BX,IAAAA,KAAK,CAAE,iCAAgCW,MAAM,CAACC,EAAG,EAA5C,EAA+C;AAClDX,MAAAA,MAAM,EAAE;AAD0C,KAA/C,CAAL,CAGCK,IAHD,CAGM,MAAKpB,aAAa,CAACD,UAAU,CAAC4B,MAAX,CAAmBC,IAAD,IAASA,IAAI,CAACF,EAAL,KAAYD,MAAM,CAACC,EAA9C,CAAD,CAHxB;AAIH;;AAGF,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,QAAQ,EAAElB,YAAjB;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAEL,YAAjB;AAA+B,QAAA,KAAK,EAAEF,SAAS,CAAC4B,OAAhD;AAAyD,QAAA,IAAI,EAAC,MAA9D;AAAqE,QAAA,IAAI,EAAC,MAA1E;AAAiF,QAAA,WAAW,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAE1B,YAAjB;AAAgC,QAAA,KAAK,EAAEF,SAAS,CAAC6B,YAAjD;AAA+D,QAAA,IAAI,EAAC,MAApE;AAA2E,QAAA,IAAI,EAAC,OAAhF;AAAwF,QAAA,WAAW,EAAC;AAApG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,QAAQ,EAAE3B,YAAjB;AAA+B,QAAA,KAAK,EAAEF,SAAS,CAAC8B,cAAhD;AAAgE,QAAA,IAAI,EAAC,MAArE;AAA4E,QAAA,IAAI,EAAC,aAAjF;AAA+F,QAAA,WAAW,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,QAAQ,EAAE5B,YAAjB;AAA+B,QAAA,KAAK,EAAEF,SAAS,CAAC+B,eAAhD;AAAiE,QAAA,IAAI,EAAC,MAAtE;AAA6E,QAAA,IAAI,EAAC,cAAlF;AAAkG,QAAA,WAAW,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAS,QAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EASCjC,UAAU,CAACkC,GAAX,CAAgBR,MAAD,iBAAW,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,MAApB;AAA4B,MAAA,YAAY,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,YAA1B,CATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAjGQ1B,G;;KAAAA,G;AAkGT,eAAeA,GAAf","sourcesContent":["// src/components/About.js\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport RecipeCard from \"./RecipeCard\"\n\nfunction Add() {\n\n// const [addRecipe, setAddRecipe] = useState([])\nconst [allRecipes, setAllRecipes] = useState([])\nconst [formState, setFormSate] = useState({\n     \"strMeal\": \"\",\n     \"strIngredients\": \"\",\n     \"strInstructions\": \"\",\n     \"strMealThumb\": \"\"\n})\n\nfunction handleChange(e){\n  const name = e.target.name\n  let value = e.target.value\n}\n\nsetFormSate({\n  \n})\n\nfunction handleSubmit(e){\n  e.preventDefault()\n  //console.log(e.target.image.value)\nlet newMeal = {\n     \"strMeal\": e.target.name.value,\n     \"strIngredients\": e.target.ingredients.value,\n     \"strInstructions\": e.target.instructions.value,\n     \"strMealThumb\": e.target.image.value,\n      }\n      fetch(\"http://localhost:8000/recipes\", {\n        method:'POST',\n        headers:  {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newMeal)\n      })\n      .then(response => response.json())\n      .then(data => allRecipes([data, ...allRecipes]))\n      \n    }\n\n \n//  function handleSubmit(e){\n//    e.preventDefault()\n//    //console.log(e.target.image.value)\n//  let newMeal = {\n//       \"strMeal\": e.target.name.value,\n//       \"strIngredients\": e.target.ingredients.value,\n//       \"strInstructions\": e.target.instructions.value,\n//       \"strMealThumb\": e.target.image.value,\n//        }\n//        fetch(\"http://localhost:8000/recipes\", {\n//          method:'POST',\n//          headers:  {\n//            \"Content-type\": \"application/json\"\n//          },\n//          body: JSON.stringify(newMeal)\n//        })\n//        .then(response => response.json())\n//        .then(data => setAllRecipes([data, ...allRecipes]))\n//        setAllRecipes({\n//         \"strMeal\": \"\",\n//         \"strIngredients\": \"\",\n//         \"strInstructions\": \"\",\n//         \"strMealThumb\": \"\",\n//          })\n//      }\n     \n     useEffect(() => {\n        fetch(\"http://localhost:8000/recipes\")\n        .then(response => response.json())\n        .then(data => setAllRecipes(data))\n     }, [])\n\n    \n     \n     function deleteRecipe(recipe){\n      fetch(`http://localhost:8000/recipes/${recipe.id}`, {\n        method: \"DELETE\"\n      })\n      .then(()=> setAllRecipes(allRecipes.filter((meal)=> meal.id !== recipe.id)))\n  }\n      \n\n return (\n  <div className=\"new-recipe-form\">\n    <h2>New Recipe</h2>\n    <form  onSubmit={handleSubmit}>\n      <input onChange={handleChange} value={formState.strMeal} type=\"text\" name=\"name\" placeholder=\"Recipe name\" />\n      <input onChange={handleChange}  value={formState.strMealThumb} type=\"text\" name=\"image\" placeholder=\"Image URL\" />\n      <input onChange={handleChange} value={formState.strIngredients} type=\"text\" name=\"ingredients\" placeholder=\"Ingredients\"/>\n      <input onChange={handleChange} value={formState.strInstructions} type=\"text\" name=\"instructions\"  placeholder=\"Instructions\" />\n      <button  type=\"submit\"> Add Recipe</button>\n    </form>\n  {allRecipes.map((recipe)=> <RecipeCard recipe={recipe} deleteRecipe={deleteRecipe}/>)}\n  </div>\n)\n}\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}