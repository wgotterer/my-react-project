{"ast":null,"code":"var _jsxFileName = \"/Users/alejandromarcano/Development/code/project2-draft/my-react-project/src/components/AddEmpty.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEmpty() {\n  _s();\n\n  const [fields, setFields] = useState([{\n    value: null\n  }]);\n\n  function handleChange(i, event) {\n    const values = [...fields];\n    values[i].value = event.target.value;\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({\n      value: null\n    });\n    setFields(values);\n    fetch(\"http://localhost:8000/recipes\", {\n      method: 'PATCH',\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(response => response.json()).then(data => console.log([data, ...fields]));\n  }\n\n  function handleRemove(i) {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleAdd(),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), fields.map((field, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add Ingredient\",\n          onChange: e => handleChange(idx, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleRemove(idx),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, `${field}-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEmpty, \"RWPyk/9FeXRQTchwVYLVxt9HGR4=\");\n\n_c = AddEmpty;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEmpty\");","map":{"version":3,"sources":["/Users/alejandromarcano/Development/code/project2-draft/my-react-project/src/components/AddEmpty.js"],"names":["React","useState","AddEmpty","fields","setFields","value","handleChange","i","event","values","target","handleAdd","push","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","handleRemove","splice","map","field","idx","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAIA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAC;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAD,CAApC;;AAEF,WAASC,YAAT,CAAsBC,CAAtB,EAAyBC,KAAzB,EAAgC;AAC9B,UAAMC,MAAM,GAAG,CAAC,GAAGN,MAAJ,CAAf;AACAM,IAAAA,MAAM,CAACF,CAAD,CAAN,CAAUF,KAAV,GAAkBG,KAAK,CAACE,MAAN,CAAaL,KAA/B;AACAD,IAAAA,SAAS,CAACK,MAAD,CAAT;AACD;;AAED,WAASE,SAAT,GAAqB;AACnB,UAAMF,MAAM,GAAG,CAAC,GAAGN,MAAJ,CAAf;AACAM,IAAAA,MAAM,CAACG,IAAP,CAAY;AAAEP,MAAAA,KAAK,EAAE;AAAT,KAAZ;AACAD,IAAAA,SAAS,CAACK,MAAD,CAAT;AAEAI,IAAAA,KAAK,CAAC,+BAAD,EAAiC;AACtCC,MAAAA,MAAM,EAAC,OAD+B;AAEtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6B;AAKtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,MAAf;AALgC,KAAjC,CAAL,CAODU,IAPC,CAOIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPhB,EAQDF,IARC,CAQIG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,CAACF,IAAD,EAAO,GAAGnB,MAAV,CAAZ,CARZ;AASH;;AAEC,WAASsB,YAAT,CAAsBlB,CAAtB,EAAyB;AACvB,UAAME,MAAM,GAAG,CAAC,GAAGN,MAAJ,CAAf;AACAM,IAAAA,MAAM,CAACiB,MAAP,CAAcnB,CAAd,EAAiB,CAAjB;AACAH,IAAAA,SAAS,CAACK,MAAD,CAAT;AACD;;AACD,sBACE;AAAA,4BAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAME,SAAS,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAOGR,MAAM,CAACwB,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1B,0BACC;AAAA,gCACG;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,QAAQ,EAAEC,CAAC,IAAIxB,YAAY,CAACuB,GAAD,EAAMC,CAAN;AAH7B;AAAA;AAAA;AAAA;AAAA,gBADH,eAMG;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,MAAML,YAAY,CAACI,GAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANH;AAAA,SAAW,GAAED,KAAM,IAAGC,GAAI,EAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AAYD,KAbA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAtDuB3B,Q;;KAAAA,Q","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\n\n\nexport default function AddEmpty() {\n    const [fields, setFields] = useState([{ value: null }]);\n\n  function handleChange(i, event) {\n    const values = [...fields];\n    values[i].value = event.target.value;\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({ value: null });\n    setFields(values);\n\n    fetch(\"http://localhost:8000/recipes\",{\n    method:'PATCH',\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(values)\n  })\n  .then(response => response.json())\n  .then(data => console.log([data, ...fields]))\n}\n\n  function handleRemove(i) {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  }\n  return (\n    <div>\n      {/* <h1>Add Ingredients</h1> */}\n\n      <button type=\"button\" onClick={() => handleAdd()}>\n        +\n      </button>\n\n      {fields.map((field, idx) => {\n        return (\n         <div key={`${field}-${idx}`}>\n            <input\n              type=\"text\"\n              placeholder=\"Add Ingredient\"\n              onChange={e => handleChange(idx, e)}\n            />\n            <button type=\"button\" onClick={() => handleRemove(idx)}>\n              delete\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}